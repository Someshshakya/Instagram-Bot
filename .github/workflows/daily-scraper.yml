name: Daily Instagram Follower Scraper

on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  actions: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    env:
      INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
      INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      CI: true
      CHROME_PATH: /usr/bin/google-chrome
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 \
          --no-install-recommends
        
    - name: Check Chrome installation
      run: |
        google-chrome --version
        which google-chrome
        
    - name: Install dependencies
      run: |
        echo "Installing npm dependencies..."
        npm install
        echo "Installed dependencies:"
        npm list --depth=0
        
    - name: Verify Secrets
      run: |
        if [ -z "${{ secrets.INSTAGRAM_USERNAME }}" ]; then
          echo "Error: INSTAGRAM_USERNAME is not set"
          exit 1
        fi
        if [ -z "${{ secrets.INSTAGRAM_PASSWORD }}" ]; then
          echo "Error: INSTAGRAM_PASSWORD is not set"
          exit 1
        fi
        if [ -z "${{ secrets.MONGODB_URI }}" ]; then
          echo "Error: MONGODB_URI is not set"
          exit 1
        fi
        echo "âœ“ All required secrets are set"
        
    - name: Test MongoDB Connection
      run: |
        echo "const { MongoClient } = require('mongodb');
        async function testConnection() {
          console.log('Testing MongoDB connection...');
          const client = new MongoClient('${{ secrets.MONGODB_URI }}');
          try {
            console.log('Attempting to connect...');
            await client.connect();
            console.log('MongoDB connection successful');
            const db = client.db('instagram_bot');
            console.log('Testing database access...');
            await db.command({ ping: 1 });
            console.log('Database ping successful');
          } catch (error) {
            console.error('MongoDB connection failed:', error);
            process.exit(1);
          } finally {
            await client.close();
          }
        }
        testConnection().catch(console.error);" > test-mongo-connection.js
        node test-mongo-connection.js
        
    - name: Create .env file
      run: |
        echo "INSTAGRAM_USERNAME=${{ secrets.INSTAGRAM_USERNAME }}" >> .env
        echo "INSTAGRAM_PASSWORD=${{ secrets.INSTAGRAM_PASSWORD }}" >> .env
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
        echo "CI=true" >> .env
        echo "CHROME_PATH=${{ env.CHROME_PATH }}" >> .env
        
    - name: Run scraper
      run: |
        echo "Starting follower script..."
        echo "Chrome path: ${{ env.CHROME_PATH }}"
        echo "Chrome version: $(google-chrome --version)"
        node followerScraper.js
      env:
        INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
        INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        CI: true
        CHROME_PATH: ${{ env.CHROME_PATH }}
      
    - name: Cleanup
      if: always()
      run: |
        rm -f .env
        rm -f test-mongo-connection.js 